Linux中grep命令的用法
格式为：grep  [选项]  ”模式“ [文件]
常用选项：
   -E ：开启扩展（Extend）的正则表达式。

　　-i ：忽略大小写（ignore case）。

　　-v ：反过来（invert），只打印没有匹配的。
　　
    -n ：显示行号

　　-w ：被匹配的文本只能是单词，而不能是单词中的某一部分，如文本中有liker，而我搜寻的只是like，就可以使用-w选项来避免匹配liker

　　-c ：显示总共有多少行被匹配到了，而不是显示被匹配到的内容，注意如果同时使用-cv选项是显示有多少行没有被匹配到。

　　-o ：只显示被模式匹配到的字符串。

　　-A  n：显示匹配到的字符串所在的行及其后n行，after

　　-B  n：显示匹配到的字符串所在的行及其前n行，before

　　-C  n：显示匹配到的字符串所在的行及其前后各n行，context
  
  示例：
[root@zabbix ~]# grep "zabbix" /etc/passwd
zabbix:x:988:982:Zabbix Monitoring System:/var/lib/zabbix:/sbin/nologin

[root@zabbix ~]# grep -A2 "core id" /proc/cpuinfo
core id         : 0
cpu cores       : 1
apicid          : 0

[root@zabbix ~]# grep -B2 "core id" /proc/cpuinfo
physical id     : 0
siblings        : 1
core id         : 0

[root@zabbix ~]# grep -C2 "core id" /proc/cpuinfo
physical id     : 0
siblings        : 1
core id         : 0
cpu cores       : 1
apicid          : 0

正则表达式：
匹配字符：
. ：任意一个字符。

[abc] ：表示匹配一个字符，这个字符必须是abc中的一个。

[a-zA-Z] ：表示匹配一个字符，这个字符必须是a-z或A-Z这52个字母中的一个。

[^123] ：匹配一个字符，这个字符是除了1、2、3以外的所有字符。
　　　　　　
对于一些常用的字符集，系统做了定义：

[A-Za-z] 等价于 [[:alpha:]]

[0-9] 等价于 [[:digit:]]

[A-Za-z0-9] 等价于 [[:alnum:]]

tab,space 等空白字符 [[:space:]]

[A-Z] 等价于 [[:upper:]]

[a-z] 等价于 [[:lower:]]

匹配次数
\{m,n\} ：匹配其前面出现的字符至少m次，至多n次。
\? ：匹配其前面出现的内容0次或1次，等价于\{0,1\}。
* ：匹配其前面出现的内容任意次，等价于\{0,\}，所以 ".*" 表述任意字符任意次，即无论什么内容全部匹配。

位置锚定
^ ：锚定行首
$ ：锚定行尾。技巧："^$"用于匹配空白行。
\b或\<：锚定单词的词首。如"\blike"不会匹配alike，但是会匹配liker
\b或\>：锚定单词的词尾。如"\blike\b"不会匹配alike和liker，只会匹配like
\B ：与\b作用相反。



　　　　　　标点符号 [[:punct:]]


